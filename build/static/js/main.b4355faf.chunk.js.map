{"version":3,"sources":["game.js","Space.js","board.js","index.js"],"names":["initSpaces","spaces","Array","fill","top","bottom","leftLower","rightLower","className","isEmpty","isAnimated","i","length","console","log","Startlandia","name","setup","positions","player1","player2","moves","rollDie","G","ctx","dieRoll","random","D6","switchPlayer","currentPlayer","events","endTurn","occupySpace","id","fillSpace","prompt","Space","this","props","spaceData","Component","Board","onClick","tbody","cells","j","push","key","spaceNum","React","App","Client","game","board","debug","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4355faf.chunk.js","sourcesContent":["let initSpaces = () => {\n  let spaces = Array(12).fill({top: '', bottom:'', leftLower:'', rightLower:'', className:'', isEmpty: true, isAnimated: false })\n\n  for(let i=0; i<spaces.length; i++){\n    spaces[i] = {top: '', bottom:'open', leftLower:'', rightLower:'', className: 'board-space outer', isEmpty: true, isAnimated: false }\n  }\n\n  spaces[0] = {top: 'Startlandia', bottom:'~ rest here ~', leftLower:'', rightLower:'', \n               className: 'board-space outer startlandia', isEmpty: false, isAnimated: false}\n  spaces[5] = {top: 'switch player', bottom:'ðŸ¦‹', leftLower:'', rightLower:'',\n               className: 'board-space inner switch', isEmpty: false, isAnimated: false }\n  spaces[6] = {top: 'roll dice', bottom:'*', leftLower:'', rightLower:'',\n               className: 'board-space inner dice', isEmpty: false, isAnimated: false }\n  console.log(spaces)             \n  return spaces;\n}\n\nlet getActionRule = () =>  {\n  return prompt(\"action rule\", \"draw a monster\")\n}\n\nlet getMovementRule = () =>  {\n  return prompt(\"movement rule\", \"2 spaces forward\")\n}\n\nconst Startlandia = {\n  name: \"startlandia\",\n\n  setup: () => ({\n    positions: {\n      player1: 0,\n      player2: 0,\n    },\n    spaces: initSpaces(),\n  }),\n\n  moves: {\n\n    rollDie: (G, ctx) => {\n        G.dieRoll = ctx.random.D6();\n        G.spaces[6].bottom = G.dieRoll;\n    },\n\n    switchPlayer: (G, ctx) => {\n      ctx.currentPlayer===\"0\" ? G.spaces[5].bottom = \"ðŸ¦„\" : G.spaces[5].bottom = \"ðŸ¦‹\"\n      ctx.events.endTurn();\n    },\n\n    occupySpace: (G, ctx, id) => {\n      ctx.currentPlayer===\"0\" ? G.positions.player1 = id : G.positions.player2 = id\n    },\n\n    fillSpace: (G, ctx, id) => {\n      G.spaces[id].isAnimated = false;\n      G.spaces[id].isEmpty = false;\n      G.spaces[id].top = getActionRule(id);\n      G.spaces[id].bottom = getMovementRule(id);\n    },\n\n  },\n\n};\n\nexport default Startlandia;\n","import React, { Component } from 'react'\n\n\nexport default class Space extends Component {\n\n    render() {\n\n        return (\n            <div id={this.props.id} className={this.props.className}>\n                <p className=\"top-text\">{this.props.spaceData.top}</p>\n                <p className=\"bottom-text\">{this.props.spaceData.bottom}</p>\n                <div className=\"player-area\">\n                    <h1 className=\"player\">{this.props.player1}</h1>\n                    <h1 className=\"player\">{this.props.player2}</h1>\n                </div>    \n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Space from './Space';\nimport './board.css';\n\nclass Board extends React.Component {\n  static propTypes = {\n    G: PropTypes.any.isRequired,\n    ctx: PropTypes.any.isRequired,\n    moves: PropTypes.any.isRequired,\n    playerID: PropTypes.string,\n    isActive: PropTypes.bool,\n    isMultiplayer: PropTypes.bool,\n  };\n\n  onClick = id => {\n    \n    if(id===5){\n      this.props.moves.switchPlayer()\n\n    } else if (id===6){\n      this.props.moves.rollDie()\n\n    } else if (this.props.G.spaces[id].isEmpty) {\n      this.props.moves.occupySpace(id)\n      this.props.moves.fillSpace(id)\n\n    } else {\n      this.props.moves.occupySpace(id)\n    };\n  };\n\n  render() {\n    let tbody = [];\n    for (let i = 0; i < 3; i++) {\n      let cells = [];\n      for (let j = 0; j < 4; j++) {\n        const id = 4 * i + j;\n        let className = this.props.G.spaces[id].className\n        let contentClass = ''\n        contentClass=(this.props.G.spaces[id].isEmpty ? ' empty' : ' filled' )\n        className += contentClass\n        cells.push(\n          <td\n            key={id}\n            onClick={() => this.onClick(id)}\n          >\n            <Space\n              spaceNum={id}\n              spaceData={this.props.G.spaces[id]}\n              className={className} \n              player1={this.props.G.positions.player1===id ? \"ðŸ¦‹\" : \"\"}\n              player2={this.props.G.positions.player2===id ? \"ðŸ¦„\" : \"\"}\n            />\n          </td>\n        );\n      }\n      tbody.push(<tr key={i}>{cells}</tr>);\n    }\n\n    return (\n      <div id=\"board-container\">\n        <table id=\"board\">\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Board;","/*\n * Copyright 2017 The boardgame.io Authors.\n *\n * Use of this source code is governed by a MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n */\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Client } from \"boardgame.io/react\";\nimport Startlandia from \"./game\";\nimport Board from \"./board\";\n\nconst App = Client({\n  game: Startlandia,\n  board: Board,\n  debug: false\n});\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}